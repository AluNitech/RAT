// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: victim_registration.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CPU情報
type CPUInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`                                     // CPUモデル名
	Cores         int32                  `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`                                    // コア数
	Threads       int32                  `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`                                // スレッド数
	FrequencyMhz  float64                `protobuf:"fixed64,4,opt,name=frequency_mhz,json=frequencyMhz,proto3" json:"frequency_mhz,omitempty"` // 周波数（MHz）
	Architecture  string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`                       // アーキテクチャ（x86_64, arm64等）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUInfo) Reset() {
	*x = CPUInfo{}
	mi := &file_victim_registration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo) ProtoMessage() {}

func (x *CPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo.ProtoReflect.Descriptor instead.
func (*CPUInfo) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{0}
}

func (x *CPUInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CPUInfo) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPUInfo) GetThreads() int32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *CPUInfo) GetFrequencyMhz() float64 {
	if x != nil {
		return x.FrequencyMhz
	}
	return 0
}

func (x *CPUInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

// OS情報
type OSInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                        // OS名（Windows, Linux, macOS等）
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`                                  // OSバージョン
	Build         string                 `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`                                      // ビルド番号
	KernelVersion string                 `protobuf:"bytes,4,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"` // カーネルバージョン
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSInfo) Reset() {
	*x = OSInfo{}
	mi := &file_victim_registration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSInfo) ProtoMessage() {}

func (x *OSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSInfo.ProtoReflect.Descriptor instead.
func (*OSInfo) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{1}
}

func (x *OSInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OSInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OSInfo) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *OSInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

// モニター情報
type MonitorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`                          // 横解像度
	Height        int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`                        // 縦解像度
	IsPrimary     bool                   `protobuf:"varint,3,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"` // プライマリモニターかどうか
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                             // モニター名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorInfo) Reset() {
	*x = MonitorInfo{}
	mi := &file_victim_registration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorInfo) ProtoMessage() {}

func (x *MonitorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorInfo.ProtoReflect.Descriptor instead.
func (*MonitorInfo) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{2}
}

func (x *MonitorInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MonitorInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MonitorInfo) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *MonitorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// システム情報
type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddress     string                 `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`                // IPアドレス
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                                   // 被害者名
	OsInfo        *OSInfo                `protobuf:"bytes,3,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`                         // OS情報
	MonitorCount  int32                  `protobuf:"varint,4,opt,name=monitor_count,json=monitorCount,proto3" json:"monitor_count,omitempty"`      // モニターの数
	Monitors      []*MonitorInfo         `protobuf:"bytes,5,rep,name=monitors,proto3" json:"monitors,omitempty"`                                   // モニター詳細情報
	CpuInfo       *CPUInfo               `protobuf:"bytes,6,opt,name=cpu_info,json=cpuInfo,proto3" json:"cpu_info,omitempty"`                      // CPU情報
	TotalMemoryMb int64                  `protobuf:"varint,7,opt,name=total_memory_mb,json=totalMemoryMb,proto3" json:"total_memory_mb,omitempty"` // 総メモリ量（MB）
	Hostname      string                 `protobuf:"bytes,8,opt,name=hostname,proto3" json:"hostname,omitempty"`                                   // ホスト名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_victim_registration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{3}
}

func (x *SystemInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *SystemInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SystemInfo) GetOsInfo() *OSInfo {
	if x != nil {
		return x.OsInfo
	}
	return nil
}

func (x *SystemInfo) GetMonitorCount() int32 {
	if x != nil {
		return x.MonitorCount
	}
	return 0
}

func (x *SystemInfo) GetMonitors() []*MonitorInfo {
	if x != nil {
		return x.Monitors
	}
	return nil
}

func (x *SystemInfo) GetCpuInfo() *CPUInfo {
	if x != nil {
		return x.CpuInfo
	}
	return nil
}

func (x *SystemInfo) GetTotalMemoryMb() int64 {
	if x != nil {
		return x.TotalMemoryMb
	}
	return 0
}

func (x *SystemInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// 被害者登録リクエスト
type RegisterUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemInfo    *SystemInfo            `protobuf:"bytes,1,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"` // システム情報
	UserAgent     string                 `protobuf:"bytes,2,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`    // 被害者エージェント（オプション）
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                    // タイムスタンプ
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	mi := &file_victim_registration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterUserRequest) GetSystemInfo() *SystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

func (x *RegisterUserRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *RegisterUserRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 被害者登録レスポンス
type RegisterUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                               // 登録成功フラグ
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // 生成された被害者ID
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                // メッセージ
	RegisteredAt  int64                  `protobuf:"varint,4,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"` // 登録日時
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	mi := &file_victim_registration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_victim_registration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_victim_registration_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterUserResponse) GetRegisteredAt() int64 {
	if x != nil {
		return x.RegisteredAt
	}
	return 0
}

var File_victim_registration_proto protoreflect.FileDescriptor

const file_victim_registration_proto_rawDesc = "" +
	"\n" +
	"\x19victim_registration.proto\x12\tmodernrat\"\x98\x01\n" +
	"\aCPUInfo\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\x05R\x05cores\x12\x18\n" +
	"\athreads\x18\x03 \x01(\x05R\athreads\x12#\n" +
	"\rfrequency_mhz\x18\x04 \x01(\x01R\ffrequencyMhz\x12\"\n" +
	"\farchitecture\x18\x05 \x01(\tR\farchitecture\"s\n" +
	"\x06OSInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x14\n" +
	"\x05build\x18\x03 \x01(\tR\x05build\x12%\n" +
	"\x0ekernel_version\x18\x04 \x01(\tR\rkernelVersion\"n\n" +
	"\vMonitorInfo\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x03 \x01(\bR\tisPrimary\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xbf\x02\n" +
	"\n" +
	"SystemInfo\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x01 \x01(\tR\tipAddress\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12*\n" +
	"\aos_info\x18\x03 \x01(\v2\x11.modernrat.OSInfoR\x06osInfo\x12#\n" +
	"\rmonitor_count\x18\x04 \x01(\x05R\fmonitorCount\x122\n" +
	"\bmonitors\x18\x05 \x03(\v2\x16.modernrat.MonitorInfoR\bmonitors\x12-\n" +
	"\bcpu_info\x18\x06 \x01(\v2\x12.modernrat.CPUInfoR\acpuInfo\x12&\n" +
	"\x0ftotal_memory_mb\x18\a \x01(\x03R\rtotalMemoryMb\x12\x1a\n" +
	"\bhostname\x18\b \x01(\tR\bhostname\"\x8a\x01\n" +
	"\x13RegisterUserRequest\x126\n" +
	"\vsystem_info\x18\x01 \x01(\v2\x15.modernrat.SystemInfoR\n" +
	"systemInfo\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x02 \x01(\tR\tuserAgent\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\x88\x01\n" +
	"\x14RegisterUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12#\n" +
	"\rregistered_at\x18\x04 \x01(\x03R\fregisteredAt2j\n" +
	"\x17UserRegistrationService\x12O\n" +
	"\fRegisterUser\x12\x1e.modernrat.RegisterUserRequest\x1a\x1f.modernrat.RegisterUserResponseB\x1cZ\x1agithub.com/modernrat/protob\x06proto3"

var (
	file_victim_registration_proto_rawDescOnce sync.Once
	file_victim_registration_proto_rawDescData []byte
)

func file_victim_registration_proto_rawDescGZIP() []byte {
	file_victim_registration_proto_rawDescOnce.Do(func() {
		file_victim_registration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_victim_registration_proto_rawDesc), len(file_victim_registration_proto_rawDesc)))
	})
	return file_victim_registration_proto_rawDescData
}

var file_victim_registration_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_victim_registration_proto_goTypes = []any{
	(*CPUInfo)(nil),              // 0: modernrat.CPUInfo
	(*OSInfo)(nil),               // 1: modernrat.OSInfo
	(*MonitorInfo)(nil),          // 2: modernrat.MonitorInfo
	(*SystemInfo)(nil),           // 3: modernrat.SystemInfo
	(*RegisterUserRequest)(nil),  // 4: modernrat.RegisterUserRequest
	(*RegisterUserResponse)(nil), // 5: modernrat.RegisterUserResponse
}
var file_victim_registration_proto_depIdxs = []int32{
	1, // 0: modernrat.SystemInfo.os_info:type_name -> modernrat.OSInfo
	2, // 1: modernrat.SystemInfo.monitors:type_name -> modernrat.MonitorInfo
	0, // 2: modernrat.SystemInfo.cpu_info:type_name -> modernrat.CPUInfo
	3, // 3: modernrat.RegisterUserRequest.system_info:type_name -> modernrat.SystemInfo
	4, // 4: modernrat.UserRegistrationService.RegisterUser:input_type -> modernrat.RegisterUserRequest
	5, // 5: modernrat.UserRegistrationService.RegisterUser:output_type -> modernrat.RegisterUserResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_victim_registration_proto_init() }
func file_victim_registration_proto_init() {
	if File_victim_registration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_victim_registration_proto_rawDesc), len(file_victim_registration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_victim_registration_proto_goTypes,
		DependencyIndexes: file_victim_registration_proto_depIdxs,
		MessageInfos:      file_victim_registration_proto_msgTypes,
	}.Build()
	File_victim_registration_proto = out.File
	file_victim_registration_proto_goTypes = nil
	file_victim_registration_proto_depIdxs = nil
}
