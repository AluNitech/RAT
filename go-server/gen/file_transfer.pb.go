// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: file_transfer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages for file transfer between admin console and user agent.
type FileTransferMessageType int32

const (
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_UNSPECIFIED FileTransferMessageType = 0
	// Client -> Server: announce availability for file transfers.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_REGISTER FileTransferMessageType = 1
	// Server -> Client: acknowledge registration.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_REGISTERED FileTransferMessageType = 2
	// Admin -> Server -> Client: request to upload a file to the client machine.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_UPLOAD_REQUEST FileTransferMessageType = 3
	// Admin -> Server -> Client: request to download a file from the client machine.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_DOWNLOAD_REQUEST FileTransferMessageType = 4
	// Client -> Server -> Admin: accept a transfer request.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_ACCEPTED FileTransferMessageType = 5
	// Client -> Server -> Admin: reject a transfer request before it starts.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_REJECTED FileTransferMessageType = 6
	// Either direction: chunked file data content.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_DATA FileTransferMessageType = 7
	// Either direction: sent when the transfer completed successfully.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_COMPLETE FileTransferMessageType = 8
	// Either direction: cancellation or error.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_ERROR FileTransferMessageType = 9
	// Either direction: cancel an in-flight transfer.
	FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_CANCEL FileTransferMessageType = 10
)

// Enum value maps for FileTransferMessageType.
var (
	FileTransferMessageType_name = map[int32]string{
		0:  "FILE_TRANSFER_MESSAGE_TYPE_UNSPECIFIED",
		1:  "FILE_TRANSFER_MESSAGE_TYPE_REGISTER",
		2:  "FILE_TRANSFER_MESSAGE_TYPE_REGISTERED",
		3:  "FILE_TRANSFER_MESSAGE_TYPE_UPLOAD_REQUEST",
		4:  "FILE_TRANSFER_MESSAGE_TYPE_DOWNLOAD_REQUEST",
		5:  "FILE_TRANSFER_MESSAGE_TYPE_ACCEPTED",
		6:  "FILE_TRANSFER_MESSAGE_TYPE_REJECTED",
		7:  "FILE_TRANSFER_MESSAGE_TYPE_DATA",
		8:  "FILE_TRANSFER_MESSAGE_TYPE_COMPLETE",
		9:  "FILE_TRANSFER_MESSAGE_TYPE_ERROR",
		10: "FILE_TRANSFER_MESSAGE_TYPE_CANCEL",
	}
	FileTransferMessageType_value = map[string]int32{
		"FILE_TRANSFER_MESSAGE_TYPE_UNSPECIFIED":      0,
		"FILE_TRANSFER_MESSAGE_TYPE_REGISTER":         1,
		"FILE_TRANSFER_MESSAGE_TYPE_REGISTERED":       2,
		"FILE_TRANSFER_MESSAGE_TYPE_UPLOAD_REQUEST":   3,
		"FILE_TRANSFER_MESSAGE_TYPE_DOWNLOAD_REQUEST": 4,
		"FILE_TRANSFER_MESSAGE_TYPE_ACCEPTED":         5,
		"FILE_TRANSFER_MESSAGE_TYPE_REJECTED":         6,
		"FILE_TRANSFER_MESSAGE_TYPE_DATA":             7,
		"FILE_TRANSFER_MESSAGE_TYPE_COMPLETE":         8,
		"FILE_TRANSFER_MESSAGE_TYPE_ERROR":            9,
		"FILE_TRANSFER_MESSAGE_TYPE_CANCEL":           10,
	}
)

func (x FileTransferMessageType) Enum() *FileTransferMessageType {
	p := new(FileTransferMessageType)
	*p = x
	return p
}

func (x FileTransferMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileTransferMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_file_transfer_proto_enumTypes[0].Descriptor()
}

func (FileTransferMessageType) Type() protoreflect.EnumType {
	return &file_file_transfer_proto_enumTypes[0]
}

func (x FileTransferMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileTransferMessageType.Descriptor instead.
func (FileTransferMessageType) EnumDescriptor() ([]byte, []int) {
	return file_file_transfer_proto_rawDescGZIP(), []int{0}
}

// FileTransferMessage carries metadata and content for a file transfer session.
type FileTransferMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transfer identifier assigned by the server.
	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	// User identifier associated with the message.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Type of the payload represented by this message.
	Type FileTransferMessageType `protobuf:"varint,3,opt,name=type,proto3,enum=modernrat.FileTransferMessageType" json:"type,omitempty"`
	// Path on the client machine involved in the transfer.
	RemotePath string `protobuf:"bytes,4,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	// Size of the entire file in bytes when known.
	FileSize int64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	// Sequential offset of this chunk within the file.
	Offset int64 `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	// Binary chunk payload for FILE_TRANSFER_MESSAGE_TYPE_DATA.
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// Human-readable status text or error details.
	Text          string `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileTransferMessage) Reset() {
	*x = FileTransferMessage{}
	mi := &file_file_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileTransferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferMessage) ProtoMessage() {}

func (x *FileTransferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_file_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferMessage.ProtoReflect.Descriptor instead.
func (*FileTransferMessage) Descriptor() ([]byte, []int) {
	return file_file_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *FileTransferMessage) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *FileTransferMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FileTransferMessage) GetType() FileTransferMessageType {
	if x != nil {
		return x.Type
	}
	return FileTransferMessageType_FILE_TRANSFER_MESSAGE_TYPE_UNSPECIFIED
}

func (x *FileTransferMessage) GetRemotePath() string {
	if x != nil {
		return x.RemotePath
	}
	return ""
}

func (x *FileTransferMessage) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileTransferMessage) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileTransferMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileTransferMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_file_transfer_proto protoreflect.FileDescriptor

const file_file_transfer_proto_rawDesc = "" +
	"\n" +
	"\x13file_transfer.proto\x12\tmodernrat\"\x85\x02\n" +
	"\x13FileTransferMessage\x12\x1f\n" +
	"\vtransfer_id\x18\x01 \x01(\tR\n" +
	"transferId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x126\n" +
	"\x04type\x18\x03 \x01(\x0e2\".modernrat.FileTransferMessageTypeR\x04type\x12\x1f\n" +
	"\vremote_path\x18\x04 \x01(\tR\n" +
	"remotePath\x12\x1b\n" +
	"\tfile_size\x18\x05 \x01(\x03R\bfileSize\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x03R\x06offset\x12\x12\n" +
	"\x04data\x18\a \x01(\fR\x04data\x12\x12\n" +
	"\x04text\x18\b \x01(\tR\x04text*\xe6\x03\n" +
	"\x17FileTransferMessageType\x12*\n" +
	"&FILE_TRANSFER_MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12'\n" +
	"#FILE_TRANSFER_MESSAGE_TYPE_REGISTER\x10\x01\x12)\n" +
	"%FILE_TRANSFER_MESSAGE_TYPE_REGISTERED\x10\x02\x12-\n" +
	")FILE_TRANSFER_MESSAGE_TYPE_UPLOAD_REQUEST\x10\x03\x12/\n" +
	"+FILE_TRANSFER_MESSAGE_TYPE_DOWNLOAD_REQUEST\x10\x04\x12'\n" +
	"#FILE_TRANSFER_MESSAGE_TYPE_ACCEPTED\x10\x05\x12'\n" +
	"#FILE_TRANSFER_MESSAGE_TYPE_REJECTED\x10\x06\x12#\n" +
	"\x1fFILE_TRANSFER_MESSAGE_TYPE_DATA\x10\a\x12'\n" +
	"#FILE_TRANSFER_MESSAGE_TYPE_COMPLETE\x10\b\x12$\n" +
	" FILE_TRANSFER_MESSAGE_TYPE_ERROR\x10\t\x12%\n" +
	"!FILE_TRANSFER_MESSAGE_TYPE_CANCEL\x10\n" +
	"2\xc8\x01\n" +
	"\x13FileTransferService\x12W\n" +
	"\x11AdminFileTransfer\x12\x1e.modernrat.FileTransferMessage\x1a\x1e.modernrat.FileTransferMessage(\x010\x01\x12X\n" +
	"\x12ClientFileTransfer\x12\x1e.modernrat.FileTransferMessage\x1a\x1e.modernrat.FileTransferMessage(\x010\x01B\x1cZ\x1agithub.com/modernrat/protob\x06proto3"

var (
	file_file_transfer_proto_rawDescOnce sync.Once
	file_file_transfer_proto_rawDescData []byte
)

func file_file_transfer_proto_rawDescGZIP() []byte {
	file_file_transfer_proto_rawDescOnce.Do(func() {
		file_file_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_transfer_proto_rawDesc), len(file_file_transfer_proto_rawDesc)))
	})
	return file_file_transfer_proto_rawDescData
}

var file_file_transfer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_file_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_file_transfer_proto_goTypes = []any{
	(FileTransferMessageType)(0), // 0: modernrat.FileTransferMessageType
	(*FileTransferMessage)(nil),  // 1: modernrat.FileTransferMessage
}
var file_file_transfer_proto_depIdxs = []int32{
	0, // 0: modernrat.FileTransferMessage.type:type_name -> modernrat.FileTransferMessageType
	1, // 1: modernrat.FileTransferService.AdminFileTransfer:input_type -> modernrat.FileTransferMessage
	1, // 2: modernrat.FileTransferService.ClientFileTransfer:input_type -> modernrat.FileTransferMessage
	1, // 3: modernrat.FileTransferService.AdminFileTransfer:output_type -> modernrat.FileTransferMessage
	1, // 4: modernrat.FileTransferService.ClientFileTransfer:output_type -> modernrat.FileTransferMessage
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_file_transfer_proto_init() }
func file_file_transfer_proto_init() {
	if File_file_transfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_transfer_proto_rawDesc), len(file_file_transfer_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_transfer_proto_goTypes,
		DependencyIndexes: file_file_transfer_proto_depIdxs,
		EnumInfos:         file_file_transfer_proto_enumTypes,
		MessageInfos:      file_file_transfer_proto_msgTypes,
	}.Build()
	File_file_transfer_proto = out.File
	file_file_transfer_proto_goTypes = nil
	file_file_transfer_proto_depIdxs = nil
}
